//++++++++++++++++++++++++++++++start+++++++++++++++++++++++++++++++++++++++++++
#ifndef _MOD_NTC3380_H
#define _MOD_NTC3380_H
//------------------------------E N D-------------------------------------------

//++++++++++++++++++++++++++++++start+++++++++++++++++++++++++++++++++++++++++++
#include ".\depend\bsp_ntcSensor.h"
//------------------------------E N D-------------------------------------------
//温度范围-20~120度,
//如果传感器错误返回9999
//-----------------------------------------------------------------------------
#define  SensorError   9999
//++++++++++++++++++++++++++++++start+++++++++++++++++++++++++++++++++++++++++++
//**********************获取内外传感器温度值************************************  
typedef enum
{
    SENSOR_ONE     =0,    
    SENSOR_TWO     =1,   
    SENSOR_THREE   =2,    
    SENSOR_FOUR    =3,  
    SENSOR_FIVE    =4,    
    SENSOR_SIX     =5, 
    SENSOR_SEVEN   =6,
}SensorChannel_Def;

typedef enum
{
    B_3380_10K       =0,   //B=3380  (25/50)
    B_3950_10K       =1,
}SensorType_Def;
//-----------------------------------------------------------------------------
typedef enum
{
     Res01_Degree   =0,    //0.1度最小单位
     Res05_Degree   =1,    //0.5度最小单位
     Res10_Degree   =2,    //1.0度最小单位
}Resolution_Def;
//-----------------------------------------------------------------------------

//------------------------------E N D-------------------------------------------
//++++++++++++++++++++++++++++++start+++++++++++++++++++++++++++++++++++++++++++
//Function
//名称:  返回温度值
//功能:  
//入口:  _In_SersonSelect   <<----------------------------------------------传入
//入口:  in_SenType
//入口:  in_Res_Degree
//出口:  返回INT16S值，开短路返回SensorError;
int16_t mde_NTCSensor_GetTemperature(uint8_t in_solidNum,SensorType_Def in_SenType,Resolution_Def in_Res_Degree);
//------------------------------E N D-------------------------------------------

//++++++++++++++++++++++++++++++start+++++++++++++++++++++++++++++++++++++++++++
//Task
//名称:  温度扫描模块
//功能:  开启ADC采集、温度转换和采集超时保护。
//入口:  in_sysTick
//出口:  无
void mde_NTCSensor_ScanTask(void);
int16_t mde_NTCSensor_pull_feedback_degree(void);
int16_t mde_pull_drop_temp(int16_t in_measureTemp,uint16_t in_measureHum);
//------------------------------E N D-------------------------------------------
#endif
//-----------------------Mod_ADC_NTC.h--END-----------------------------------

