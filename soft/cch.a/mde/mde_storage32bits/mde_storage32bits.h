//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#ifndef _MDE_STORAGE_H
#define _MDE_STORAGE_H
//------------------------------------------------------------------------------
#ifndef snail_data_types
    #include ".\depend\snail_data_types.h"
#endif
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
typedef enum
{
    block_first  = 0x00,
    block_second,
}block_def;
//------------------------------------------------------------------------------

//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
//2020-10-10支持数据变化后存储，没有变成不存储
//------------------------------------------------------------------------------
//Event
//------------------------------------------------------------------------------
//Status
//------------------------------------------------------------------------------
//Function
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
//名称:读取存储块的数据
//入口:
//出口:sdt_true 读取成功      

sdt_bool mde_read_storage_block(sdt_int8u in_solidNum,sdt_int32u* out_pRam);
//------------------------------------------------------------------------------
//名称:写入存储块内容
//入口:
//     
//出口:

void mde_write_storage_block(sdt_int8u in_solidNum,sdt_int32u* in_pRam);
//------------------------------------------------------------------------------
//名称:设置存储块的操作长度
//入口:
//    

void mde_storage_block_set_length_w(sdt_int8u in_solidNum,sdt_int32u in_length_8bit);

//------------------------------------------------------------------------------

//------------------------------------------------------------------------------
#endif
//++++++++++++++++++++++++++++++++++End+++++++++++++++++++++++++++++++++++++++++